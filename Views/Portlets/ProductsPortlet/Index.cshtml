@using Prolog.Web
@using Prolog.Web.Models
@using EleWise.ELMA
@using EleWise.ELMA.Model.Common
@using EleWise.ELMA.ConfigurationModel
@model ProductsPortletModel

<div class="products-filter-help">
    <input type="image" src="https://elma.prolog.ltd/Modules/Prolog.Web/Images/x24/help.png" onclick="openDocumentation()" alt="Кнопка «input»">
</div>

<div class="products-filter-wrap">
    <table class="products-filter">
        <tr>
            @foreach (var s in Enum.GetValues(ProductStatus.New.GetType()))
            {
                var index = (int)s;
                <td>
                    <button id="@index"class="products-status-filter" onclick="changeState(this);">@ModelHelper.GetEnumDisplayName(s)</button>
                </td>
            }
        </tr>
    </table>
    <br>
</div>

<div id="products-portlet-grid" class="loaded"></div>

<script>

    redraw();

    function changeState(element) {
        if (element.className == "products-status-filter") {
            element.className += " products-status-filter-pushed";
        }
        else {
            element.className = "products-status-filter";
        }
        redraw(element);
    }

    function redraw(element) {

        var filters = $('[class*="products-status-filter"]');
        var i = 0;
        var s = "";

        for (i = 0; i < filters.length; i++) {
            if (document.cookie.indexOf("ProductFilter" + parseInt(i)) == -1 || element == filters[i]) {
                let name = "ProductFilter" + parseInt(i);
                if (filters[i].className.includes("pushed")) {
                    setCookie(name, '1');
                }
                else {
                    setCookie(name, '0');
                }
            }
            else {
                if (getCookie("ProductFilter" + parseInt(i)) == '1') {
                    filters[i].className += " products-status-filter-pushed";
                }
                else {
                    filters[i].className = "products-status-filter";
                }
            }
            if (filters[i].className.includes("pushed")) {
                s += "1";
            }
            else {
                s += "0";
            }
        }

        var info = { statusFilter: s, filterId: 8501 };
        $.ajax({
            type: "GET",
            url: 'https://elma.prolog.ltd/Prolog.Web/Products/PortletGrid',
            data: info,
            success: function (resultData) {
                $("#products-portlet-grid").stop();
                $("#products-portlet-grid").animate({ opacity: 0 }, 200);
                $("#products-portlet-grid").html(resultData);
                $("#products-portlet-grid").animate({ opacity: 1 }, 200);
            },
            dataType: "html",
        });
    }

    function openDocumentation() {
        closeWindow(this, true);
        refreshPopup('PreviewPopup', '/SDK.Action/BinaryFiles/PreviewPopup/54b92a3c-30e2-4139-adbb-0cb7b16af6b7?uniqueGlobalPrefix=3c9b849c_355d_4464_804c_24c6a4fe3d7a&canLoadFile=True', null, 'Инструкция исполнителя по изделию-4.docx', 'PreviewAjaxBinding("c0e4ed28-7ef0-4a36-b9dd-3391a3db8e50", "3c9b849c_355d_4464_804c_24c6a4fe3d7a54b92a3c_30e2_4139_adbb_0cb7b16af6b7")', null, null, true, true); return false;;
    }

    function getCookie(name) {
        let matches = document.cookie.match(new RegExp(
            "(?:^|; )" + name.replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g, '\\$1') + "=([^;]*)"
        ));
        return matches ? decodeURIComponent(matches[1]) : undefined;
    }

    function setCookie(name, value, options = {}) {

        options = {
            path: '/',
            Expires: 'Thu, 01 Jan 2025 00:00:01 GMT'
        };

        if (options.expires instanceof Date) {
            options.expires = options.expires.toUTCString();
        }

        let updatedCookie = encodeURIComponent(name) + "=" + encodeURIComponent(value);

        for (let optionKey in options) {
            updatedCookie += "; " + optionKey;
            let optionValue = options[optionKey];
            if (optionValue !== true) {
                updatedCookie += "=" + optionValue;
            }
        }

        document.cookie = updatedCookie;
    }

    function deleteCookie(name) {
        setCookie(name, "", {
            'max-age': -1
        })
    }
</script>
